// EntitySelector extension for qualified entities

/*jslint vars: true, unparam: true, white: true */
/*global jQuery, IQVOC */

(function($) {

// extend original constructor -- XXX: use subclass instead?
var EntitySelector = IQVOC.EntitySelector;
IQVOC.EntitySelector = function(args) {
	var res = EntitySelector.apply(this, arguments);
	this.qualified = this.el.data("qualified") || false; // TODO: document (NB: doubles as i18n)
	if(this.qualified) {
		this.container.on("change", "input.qualified", this.onQualify);
	}
	return res;
};

EntitySelector.prototype.onQualify = function(ev) {
	var el = $(this),
		entity = el.closest("li"),
		widget = el.closest(".entity_select").data("widget"),
		id = entity.data("id"),
		value = id + ":" + el.val();
	widget.remove(id);
	widget.add(value);
};

// extend original method
var createEntity = EntitySelector.prototype.createEntity;
EntitySelector.prototype.createEntity = function(entity) {
	var item = createEntity.apply(this, arguments);
	if(this.qualified) {
		var el = item.children(":first"); // XXX: breaks encapsulation
		$('<input class="rank" />').attr("placeholder", this.qualified).
				insertAfter(el);
	}
	return item;
};

}(jQuery));
