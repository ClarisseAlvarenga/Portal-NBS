<%= render :partial => CollectionLabel.edit_partial_name(@collection), :locals => { :collection => @collection, :f => f } %>

<% [ Note::SKOS::Definition ].each do |klass| %>
  <%= render :partial => klass.edit_partial_name(@collection), :locals => { :owner_klass => @collection, :assoc_klass => klass, :f => f } %>
<% end %>

<fieldset>
  <legend><%= Iqvoc::Concept.base_class.model_name.human(:count => 2) %></legend>
  <%= text_field_tag "collection[inline_member_concept_origins]", @collection.inline_member_concept_origins.join(','),
    :class => "token_input_widget",
    :"data-query-url" => concepts_path(:lang => I18n.locale, :format => :json),
    :"data-options" => {:prePopulate => @collection.inline_member_concepts.map{|c| concept_widget_data(c)}}.to_json %>
</fieldset>

<fieldset>
  <legend><%= Collection::Base.model_name.human(:count => 2) %></legend>
  <%= text_field_tag "collection[inline_member_collection_origins]", @collection.inline_member_collection_origins.join(','),
    :class => "token_input_widget",
    :"data-query-url" => collections_path(:lang => I18n.locale, :format => :json),
    :"data-options" => {:prePopulate => @collection.inline_member_collections.map{|c| collection_widget_data(c)}}.to_json %>
</fieldset>

<%= f.submit t("txt.common.save") %>

<%= content_for :widget_translations do %>
  <%= render :partial => 'layouts/widget_translations' %>
<% end %>