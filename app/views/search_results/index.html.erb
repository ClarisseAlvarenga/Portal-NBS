<h2><%= t('txt.views.search_results.header') %></h2>

<%= form_tag(search_path(:lang => @active_language || I18n.locale), :method => :get, :class => :form, :"data-type" => (params[:type] || ""), :"data-query" => (params[:query] || "")) do %>
  <fieldset id="typecheck">
    <ol>
      <li>
        <select name="type" class="search_type">
        <%= options_for_select [
            [t('txt.views.search_results.inflectionals'), 'inflectional'],
            [t('txt.views.search_results.pref_labels'), 'pref_label'], 
            [t('txt.views.search_results.all_labels'), 'label'], 
            [t('txt.views.search_results.all_notes'), 'note']
          ], params[:type] %>
        </select>
      </li>
      <li>
        <%= select_tag :query_type, options_for_select([
            [t('txt.views.search_results.exact'), 'exact'],
            [t('txt.views.search_results.contains'), 'contains'], 
            [t('txt.views.search_results.ends_with'), 'ends_with'], 
            [t('txt.views.search_results.begins_with'), 'begins_with'],  
            [t('txt.views.search_results.regexp'), 'regexp']
          ], params[:query_type]) %>
      </li>
    </ol>
  </fieldset>

  <fieldset>
    <ol>
      <li>
        <label for="query"><%= t('txt.views.search_results.search_term') %></label><%= text_area_tag :query, params[:query] %>
      </li>
      <li>
        <label><%= t('txt.views.search_results.search_languages') %>:</label>
        <% for language, lang in @available_languages.sort %>
          <%= check_box_tag "languages[]", lang, select_search_checkbox?(lang), :id => "languages_#{lang}", :class => 'lang_check' %>
          <label for="languages_<%= lang %>"><%= language %></label>
        <% end %>
        <button type="button" id="language_select_all">
          <%= t('txt.views.search_results.all') %>
        </button>
        <button type="button" id="language_select_none">
          <%= t('txt.views.search_results.none') %>
        </button>
      </li>
      <li>
        <%= submit_tag t('txt.views.search_results.submit') %>
      </li>
    </ol>
<% end %>

<% if @results %>
  <h3><%= t('txt.views.search_results.search_results') %></h3>

  <%#= debug @results %>

  <dl id="search_results">
    <% @results.each do |result| %>
      <dt>
        <% if params[:type] == "inflectional" %>
          <%= t("txt.views.search_results.search_term_in_results") %>: <%= result[:query] %><br>
          Ergebnisse:<br>
          <span style="font-weight: normal">
          <% if result[:result].blank? %>
          <%= t("txt.views.search_results.no_results") %>
          <% else %>
          <% result[:result].each do |l| %>
          <%= link_to(l.value, label_path(:lang => @active_language, :id => l)) %> (<%= l.inflectionals.map(&:value).join(", ") %>)<br>
          <% end %>
          <% end %>
          </span>
        <% elsif result.is_a?(Iqvoc::XLLabel.base_class) %>
          <%= link_to highlight_query(result.value, params[:query], @multi_query), label_path(:lang => @active_language, :id => result) %>
        <% elsif result.is_a?(Note::Base) and result.owner.is_a?(Concept) %>
          <%= link_to result.owner.origin, concept_path(:lang => @active_language, :id => result.owner) %><br>
          <%= highlight_query(excerpt(result.value, params[:query]), params[:query], @multi_query) %>
        <% elsif result.is_a?(Note::Base) and result.owner.is_a?(Iqvoc::XLLabel.base_class) %>
          <%= link_to result.owner.value, label_path(:lang => @active_language, :id => result.owner) %><br>
          <%= highlight_query(excerpt(result.value, params[:query]), params[:query], @multi_query) %>
        <% end %>
      </dt>
      <% unless params[:type] == "inflectional" %><dd><%= t('txt.views.search_results.type') %>: <%= result.class.to_s %></dd><% end %>
      <% if result.is_a?(Label) %>
      <dd><%= t('txt.views.search_results.used_as') %>: <%= result.labelings.map {|labeling| labeling.class.to_s}.uniq.join(', ') %></dd>
      <% elsif result.is_a?(Note) %>
      <!--  -->
      <% end %>
      <% unless params[:type] == "inflectional" %><dd><%= t('txt.views.search_results.language') %>: <%= result.language %></dd><% end %>
    <% end %>
  </dl>
  
  <%= will_paginate @results, :previous_label => t("txt.common.pagination.previous"), :next_label => t("txt.common.pagination.next") unless params[:type] == "inflectional" %>
<% end %>

<%= content_for :sub_navigation do %>
<% end %>
