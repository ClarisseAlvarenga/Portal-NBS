<h2><%= t('txt.views.search_results.header') %></h2>

<%= form_tag(search_path(:lang => @active_language || I18n.locale), :method => :get, :class => :form, :id => 'search') do %>
  <fieldset id="typecheck">
    <ol>
      <li>
        <select name="type" class="search_type">
        <%= options_for_select Iqvoc.searchable_classes.map { |c| [t("txt.views.search_results.#{c.name}"), c.name] }, params[:type] %>
        </select>
      </li>
      <li>
        <%= select_tag :query_type, options_for_select([
            [t('txt.views.search_results.exact'), 'exact'],
            [t('txt.views.search_results.contains'), 'contains'], 
            [t('txt.views.search_results.ends_with'), 'ends_with'], 
            [t('txt.views.search_results.begins_with'), 'begins_with']
          ], params[:query_type]) %>
      </li>
    </ol>
  </fieldset>

  <fieldset>
    <ol>
      <li>
        <label for="query"><%= t('txt.views.search_results.search_term') %></label><%= text_area_tag :query, params[:query] %>
      </li>
      <li>
        <label><%= t('txt.views.search_results.search_languages') %>:</label>
        <% for language, lang in @available_languages.sort %>
          <%= check_box_tag "languages[]", lang, select_search_checkbox?(lang), :id => "languages_#{lang}", :class => 'lang_check' %>
          <label for="languages_<%= lang %>"><%= language %></label>
        <% end %>
        <button type="button" id="language_select_all">
          <%= t('txt.views.search_results.all') %>
        </button>
        <button type="button" id="language_select_none">
          <%= t('txt.views.search_results.none') %>
        </button>
      </li>
      <li>
        <%= submit_tag t('txt.views.search_results.submit') %>
      </li>
    </ol>
<% end %>

<% if @results %>
  <h3><%= t('txt.views.search_results.search_results') %></h3>

  <dl id="search_results">
    <%= render :partial => @klass.search_result_partial_name, :collection => @results %>
  </dl>
  
  <%= will_paginate @results, :previous_label => t("txt.common.pagination.previous"), :next_label => t("txt.common.pagination.next") unless @multi_query %>
<% end %>

<%= content_for :sub_navigation do %>
<% end %>
