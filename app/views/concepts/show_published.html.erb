<%- is_published = @concept.published? ? nil : "0" -%>

<%= render 'header', :concept => @concept %>

<% if @new_concept_version.blank? && can?(:branch, @concept) %>
  <% if @jobs.any? %>
    <%= render partial: 'partials/concept/reverse_match_notice', locals: {concept: @concept, jobs: @jobs} %>
  <% end %>
    <div class="editing_versioning_toolbar well">
      <%= button_to t("txt.views.versioning.versioning_mode"),
        concept_versions_branch_path(:origin => @concept.origin), :class => "btn btn-default" %>
    </div>
<% elsif can?(:read, @new_concept_version) %>
    <div class="editing_versioning_toolbar well">
      <%= link_to t("txt.views.versioning.preview_new_version"),
        concept_path(:published => 0, :id => @new_concept_version), :class => 'btn btn-default' %>
    </div>
<% end %>

<% if @view.definition %>
  <blockquote>
    <%= @view.definition %> <%# FIXME: `auto_link` throws "undefined method `empty?' for #<Note::SKOS::Definition:...>" %>
  </blockquote>
<% end %>

<ul class="representations list-group">
  <% @view.representations.each do |repr| %>
  <li class="list-group-item">
    <% if repr['type'] == :rdf %>
      <img src="<%= asset_path "rdf_flyer.svg" %>" title="RDF">
    <% else %>
      <%= icon('link') %>
    <% end %>
    <%= link_to repr['caption'], repr['uri'] %>
  </li>
  <% end %>
</ul>

<%= render 'layouts/sections', :sections => Iqvoc::Concept.view_sections, :data => concept_view_data(@concept) %>
